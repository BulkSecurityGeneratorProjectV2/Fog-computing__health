<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ac.sec.dao.BizUserMapper">
  <resultMap id="BaseResultMap" type="cn.ac.sec.entity.BizUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id_" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="account_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone_num" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="gender_" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="username_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_card_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="birthday_" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="address_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="created_by" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="delete_status" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="updated_by" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="created_datetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_datetime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="height_" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="weight_" javaType="java.lang.Float" jdbcType="REAL"/>
      <arg column="push_key" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="picture_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avator_" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="disable_comment" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="enable_status" javaType="java.lang.Byte" jdbcType="TINYINT"/>
      <arg column="token_" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
          -        <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id_, account_, password_, phone_num, user_type, gender_, username_, id_card_, birthday_,
    address_, created_by, delete_status, updated_by, created_datetime, updated_datetime,
    height_, weight_, push_key, picture_, avator_, disable_comment, enable_status,token_
  </sql>
  <select id="selectByExample" parameterType="cn.ac.sec.entity.BizUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.ac.sec.entity.BizUserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from biz_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="cn.ac.sec.entity.BizUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into biz_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id_,
      </if>
      <if test="account != null">
        account_,
      </if>
      <if test="password != null">
        password_,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="gender != null">
        gender_,
      </if>
      <if test="username != null">
        username_,
      </if>
      <if test="idCard != null">
        id_card_,
      </if>
      <if test="birthday != null">
        birthday_,
      </if>
      <if test="address != null">
        address_,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdDatetime != null">
        created_datetime,
      </if>
      <if test="updatedDatetime != null">
        updated_datetime,
      </if>
      <if test="height != null">
        height_,
      </if>
      <if test="weight != null">
        weight_,
      </if>
      <if test="pushKey != null">
        push_key,
      </if>
      <if test="picture != null">
        picture_,
      </if>
      <if test="avator != null">
        avator_,
      </if>
      <if test="disableComment != null">
        disable_comment,
      </if>
      <if test="enableStatus != null">
        enable_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=BIT},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdDatetime != null">
        #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null">
        #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=REAL},
      </if>
      <if test="pushKey != null">
        #{pushKey,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="avator != null">
        #{avator,jdbcType=VARCHAR},
      </if>
      <if test="disableComment != null">
        #{disableComment,jdbcType=VARCHAR},
      </if>
      <if test="enableStatus != null">
        #{enableStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ac.sec.entity.BizUserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from biz_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update biz_user
    <set>
      <if test="record.id != null">
        id_ = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account_ = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password_ = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.gender != null">
        gender_ = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.username != null">
        username_ = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card_ = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday_ = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.address != null">
        address_ = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.deleteStatus != null">
        delete_status = #{record.deleteStatus,jdbcType=BIT},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdDatetime != null">
        created_datetime = #{record.createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDatetime != null">
        updated_datetime = #{record.updatedDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.height != null">
        height_ = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight_ = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.pushKey != null">
        push_key = #{record.pushKey,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture_ = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.avator != null">
        avator_ = #{record.avator,jdbcType=VARCHAR},
      </if>
      <if test="record.disableComment != null">
        disable_comment = #{record.disableComment,jdbcType=VARCHAR},
      </if>
      <if test="record.enableStatus != null">
        enable_status = #{record.enableStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update biz_user
    set id_ = #{record.id,jdbcType=BIGINT},
      account_ = #{record.account,jdbcType=VARCHAR},
      password_ = #{record.password,jdbcType=VARCHAR},
      phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=TINYINT},
      gender_ = #{record.gender,jdbcType=BIT},
      username_ = #{record.username,jdbcType=VARCHAR},
      id_card_ = #{record.idCard,jdbcType=VARCHAR},
      birthday_ = #{record.birthday,jdbcType=DATE},
      address_ = #{record.address,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      delete_status = #{record.deleteStatus,jdbcType=BIT},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      created_datetime = #{record.createdDatetime,jdbcType=TIMESTAMP},
      updated_datetime = #{record.updatedDatetime,jdbcType=TIMESTAMP},
      height_ = #{record.height,jdbcType=INTEGER},
      weight_ = #{record.weight,jdbcType=REAL},
      push_key = #{record.pushKey,jdbcType=VARCHAR},
      picture_ = #{record.picture,jdbcType=VARCHAR},
    avator_ = #{record.avator,jdbcType=VARCHAR},
    disable_comment = #{record.disableComment,jdbcType=VARCHAR},
    enable_status = #{record.enableStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ac.sec.entity.BizUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update biz_user
    <set>
      <if test="account != null">
        account_ = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password_ = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        gender_ = #{gender,jdbcType=BIT},
      </if>
      <if test="username != null">
        username_ = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card_ = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday_ = #{birthday,jdbcType=DATE},
      </if>
      <if test="address != null">
        address_ = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=BIT},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="createdDatetime != null">
        created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null">
        updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null">
        height_ = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight_ = #{weight,jdbcType=REAL},
      </if>
      <if test="pushKey != null">
        push_key = #{pushKey,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture_ = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="avator != null">
        avator_ = #{avator,jdbcType=VARCHAR},
      </if>
      <if test="disableComment != null">
        disable_comment = #{disableComment,jdbcType=VARCHAR},
      </if>
      <if test="enableStatus != null">
        enable_status = #{enableStatus,jdbcType=TINYINT},
      </if>
      <if test="token !=null">
        token_=#{token,jdbcType=VARCHAR},
      </if>
    </set>
    where id_ = #{id,jdbcType=BIGINT}
  </update>
    <resultMap id="PartResultMap" type="cn.ac.sec.entity.BizUser">
        <constructor>
          <idArg column="id_" javaType="java.lang.Long" jdbcType="BIGINT"/>
          <arg column="phone_num" javaType="java.lang.String" jdbcType="VARCHAR"/>
          <arg column="username_" javaType="java.lang.String" jdbcType="VARCHAR"/>
          <arg column="address_" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="or_where_clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="or" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    or ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    or ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    or ${criterion.condition} #{criterion.value} or #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    or ${criterion.condition}
                                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                                           separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
  <select id="selectByLike" parameterType="cn.ac.sec.entity.BizUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_user
    <if test="_parameter != null">
      <include refid="or_where_clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="listSearch" resultMap="BaseResultMap">
    select id_, account_, password_, phone_num, user_type, gender_, username_, id_card_, birthday_, address_,
    created_by, delete_status, updated_by, created_datetime, updated_datetime, height_, weight_, push_key, picture_,
    avator_,disable_comment,enable_status,token_
      from biz_user WHERE ( delete_status = 0 and user_type in (1,3)
    <if test="keyword!=''">
     and (account_ like #{keyword} or username_ like #{keyword} or phone_num like #{keyword} or id_card_ like #{keyword} )
    </if>
    )
  </select>

  <select id="listSearchAll" resultMap="BaseResultMap">
    select id_, account_, password_, phone_num, user_type, gender_, username_, id_card_, birthday_, address_,
    created_by, delete_status, updated_by, created_datetime, updated_datetime, height_, weight_, push_key, picture_,
    avator_,disable_comment,enable_status,token_
    from biz_user WHERE ( delete_status = 0
    <if test="keyword!=''">
      and (account_ like #{keyword} or username_ like #{keyword} or phone_num like #{keyword} or id_card_ like
      #{keyword} )
    </if>
    )
  </select>

  <select id="getUserByTagOrOther" resultMap="PartResultMap">
    select  biz_user.id_ AS id_,
                    biz_user.username_ AS username_ ,
                    biz_user.phone_num AS phone_num,
                    biz_user.address_ AS address_
      from biz_user
      WHERE ( delete_status = 0 AND user_type in (1,3)
      <if test="keyword!=''">
          and ( username_ like #{keyword} or biz_user.address_ like #{keyword} or biz_user.phone_num like #{keyword}
          OR id_ in (SELECT user_ FROM biz_relation_tag_user WHERE tag_ in (SELECT id_ FROM biz_user_tag WHERE tag_name
          LIKE #{keyword}) ))
      </if>
      )
  </select>

    <select id="getUserByTagOrOtherByProfession" resultMap="PartResultMap">
        select biz_user.id_ AS id_,
        biz_user.username_ AS username_ ,
        biz_user.phone_num AS phone_num,
        biz_user.address_ AS address_
        from biz_user
        WHERE ( delete_status = 0 AND id_ IN (SELECT user_id FROM biz_profession WHERE status_ = 0)
    <if test="keyword!=''">
        and ( username_ like #{keyword} or biz_user.address_ like #{keyword} or biz_user.phone_num like #{keyword}
        OR id_ in (SELECT user_ FROM biz_relation_tag_user WHERE tag_ in (SELECT id_ FROM biz_user_tag WHERE tag_name
        LIKE #{keyword}) ))
    </if>
        )
    </select>

    <select id="getUserListByChild" resultMap="BaseResultMap">
        SELECT
      <include refid="Base_Column_List"/>
        FROM biz_user WHERE id_ IN (SELECT parent_ FROM biz_relation_user WHERE child_ = #{userId})
    </select>

    <select id="getUserListByParent" resultMap="BaseResultMap">
        SELECT
      <include refid="Base_Column_List"/>
        FROM biz_user WHERE id_ IN (SELECT child_ FROM biz_relation_user WHERE parent_ = #{userId})
    </select>

    <resultMap id="chartdatamap" type="org.ibase4j.model.ChartData">
      <result column="x" property="x" jdbcType="INTEGER" />
      <result column="y" property="y" jdbcType="INTEGER" />
    </resultMap>

    <select id="getRegisterCountByMonth" resultMap="chartdatamap">
        SELECT MONTH(created_datetime) x, COUNT(1) y FROM biz_user WHERE YEAR(created_datetime)=#{time} GROUP BY x ORDER BY x
    </select>

    <select id="getRegisterCountByDay" resultMap="chartdatamap">
        SELECT DAY(created_datetime) x, COUNT(1) y FROM biz_user where YEAR(created_datetime)=#{year} AND MONTH(created_datetime)=#{month}
        GROUP BY x ORDER BY x
    </select>

    <select id="getRegisterCountByWeek" resultMap="chartdatamap">
        SELECT WEEK(created_datetime,1) x, COUNT(1) y FROM biz_user where YEAR(created_datetime)=#{time}
        GROUP BY x ORDER BY x
    </select>

    <!--查询各个性别老人数量-->
    <select id="findMaleAmount" resultType="Long">
        SELECT COUNT(*) FROM biz_user WHERE (user_type=1 OR user_type=3) AND gender_=#{gender}

    </select>

  <!--查询各个年龄段的老人数量-->
    <select id="findAgeAmount" resultType="Long">
        SELECT count(*) FROM biz_user WHERE (user_type=1 OR user_type=3) AND TIMESTAMPDIFF(YEAR, birthday_, CURDATE()) &gt;= #{lowAge}
        AND TIMESTAMPDIFF(YEAR, birthday_, CURDATE()) &lt;= #{highAge}

    </select>

    <select id="findOtherAgeAmount" resultType="Long">
        SELECT count(*) FROM biz_user WHERE (user_type=1 OR user_type=3) AND TIMESTAMPDIFF(YEAR, birthday_, CURDATE()) &gt;= 100
        AND TIMESTAMPDIFF(YEAR, birthday_, CURDATE()) &lt;= 50

    </select>

    <!--查询不同标签类型的老人用户数量-->
    <select id="findTagAmount"   resultType="Long">
        SELECT COUNT(*) FROM biz_relation_tag_user WHERE tag_=#{tagId}
    </select>

</mapper>