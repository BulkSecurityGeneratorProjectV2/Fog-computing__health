package cn.ac.sec.dao;

import cn.ac.sec.entity.BizUserSubscription;
import cn.ac.sec.entity.BizUserSubscriptionExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface BizUserSubscriptionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int countByExample(BizUserSubscriptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int deleteByExample(BizUserSubscriptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    @Delete({
            "delete from biz_user_subscription",
            "where id_ = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    @Insert({
            "insert into biz_user_subscription (id_, user_id, ",
            "created_by, created_date, ",
            "time_limit, expiration_time)",
            "values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, ",
            "#{createdBy,jdbcType=BIGINT}, #{createdDate,jdbcType=DATE}, ",
            "#{timeLimit,jdbcType=INTEGER}, #{expirationTime,jdbcType=DATE})"
    })
    int insert(BizUserSubscription record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int insertSelective(BizUserSubscription record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    List<BizUserSubscription> selectByExample(BizUserSubscriptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "id_, user_id, created_by, created_date, time_limit, expiration_time",
            "from biz_user_subscription",
            "where id_ = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    BizUserSubscription selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BizUserSubscription record, @Param("example") BizUserSubscriptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BizUserSubscription record, @Param("example") BizUserSubscriptionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BizUserSubscription record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user_subscription
     *
     * @mbggenerated
     */
    @Update({
            "update biz_user_subscription",
            "set user_id = #{userId,jdbcType=BIGINT},",
            "created_by = #{createdBy,jdbcType=BIGINT},",
            "created_date = #{createdDate,jdbcType=DATE},",
            "time_limit = #{timeLimit,jdbcType=INTEGER},",
            "expiration_time = #{expirationTime,jdbcType=DATE}",
            "where id_ = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BizUserSubscription record);
}