package cn.ac.sec.dao;

import cn.ac.sec.entity.BizUser;
import cn.ac.sec.entity.BizUserExample;
import org.apache.ibatis.annotations.*;
import org.ibase4j.model.ChartData;

import java.util.List;

public interface BizUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int countByExample(BizUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int deleteByExample(BizUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from biz_user",
        "where id_ = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into biz_user (id_, account_, ",
        "password_, phone_num, ",
        "user_type, gender_, username_, ",
        "id_card_, birthday_, address_, ",
        "created_by, delete_status, ",
        "updated_by, created_datetime, ",
        "updated_datetime, height_, ",
            "weight_, push_key, picture_, ",
            "avator_, disable_comment, ",
            "enable_status)",
        "values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, ",
        "#{userType,jdbcType=TINYINT}, #{gender,jdbcType=BIT}, #{username,jdbcType=VARCHAR}, ",
        "#{idCard,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, ",
        "#{createdBy,jdbcType=BIGINT}, #{deleteStatus,jdbcType=BIT}, ",
        "#{updatedBy,jdbcType=BIGINT}, #{createdDatetime,jdbcType=TIMESTAMP}, ",
        "#{updatedDatetime,jdbcType=TIMESTAMP}, #{height,jdbcType=INTEGER}, ",
            "#{weight,jdbcType=REAL}, #{pushKey,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, ",
            "#{avator,jdbcType=VARCHAR}, #{disableComment,jdbcType=VARCHAR}, ",
            "#{enableStatus,jdbcType=TINYINT})"
    })
    int insert(BizUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int insertSelective(BizUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    List<BizUser> selectByExample(BizUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id_, account_, password_, phone_num, user_type, gender_, username_, id_card_, ",
        "birthday_, address_, created_by, delete_status, updated_by, created_datetime, ",
            "updated_datetime, height_, weight_, push_key, picture_, avator_, disable_comment, ",
            "enable_status,token_",
        "from biz_user",
        "where id_ = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    BizUser selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") BizUser record, @Param("example") BizUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") BizUser record, @Param("example") BizUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(BizUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table biz_user
     *
     * @mbggenerated
     */
    @Update({
        "update biz_user",
        "set account_ = #{account,jdbcType=VARCHAR},",
          "password_ = #{password,jdbcType=VARCHAR},",
          "phone_num = #{phoneNum,jdbcType=VARCHAR},",
          "user_type = #{userType,jdbcType=TINYINT},",
          "gender_ = #{gender,jdbcType=BIT},",
          "username_ = #{username,jdbcType=VARCHAR},",
          "id_card_ = #{idCard,jdbcType=VARCHAR},",
          "birthday_ = #{birthday,jdbcType=DATE},",
          "address_ = #{address,jdbcType=VARCHAR},",
          "created_by = #{createdBy,jdbcType=BIGINT},",
          "delete_status = #{deleteStatus,jdbcType=BIT},",
          "updated_by = #{updatedBy,jdbcType=BIGINT},",
          "created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},",
          "updated_datetime = #{updatedDatetime,jdbcType=TIMESTAMP},",
          "height_ = #{height,jdbcType=INTEGER},",
            "weight_ = #{weight,jdbcType=REAL},",
          "push_key = #{pushKey,jdbcType=VARCHAR},",
          "picture_ = #{picture,jdbcType=VARCHAR},",
            "avator_ = #{avator,jdbcType=VARCHAR},",
            "disable_comment = #{disableComment,jdbcType=VARCHAR},",
            "enable_status = #{enableStatus,jdbcType=TINYINT},",
            "token_ = #{token,jdbcType=VARCHAR}",
        "where id_ = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BizUser record);


    List<BizUser> listSearch(@Param("keyword") String keyword);

    List<BizUser> listSearchAll(@Param("keyword") String keyword);

    List<BizUser> getUserByTagOrOther(@Param("keyword") String keyword);

    List<BizUser> getUserListByChild(@Param("userId") Long userId);

    List<BizUser> getUserListByParent(@Param("userId") Long userId);

    List<BizUser> getUserByTagOrOtherByProfession(@Param("keyword") String keyword);

    List<ChartData> getRegisterCountByMonth(@Param("time")String time);

    List<ChartData> getRegisterCountByDay(@Param("year")Integer year,@Param("month")Integer month);

    List<ChartData> getRegisterCountByWeek(@Param("time")String time);

    Long findMaleAmount(@Param("gender") int gender);

    Long findAgeAmount(@Param("lowAge")Integer lowAge, @Param("highAge")Integer highAge);

    Long findOtherAgeAmount();

    Long findTagAmount(@Param("tagId")Integer tagId);
}